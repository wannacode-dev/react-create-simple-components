import './style.css';

const { useState } = React;

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
const PRODUCTS = [
    { id: 1, name: '–ù–æ—É—Ç–±—É–∫ ASUS', description: 'Intel Core i7, 16GB RAM, 512GB SSD', price: 75000, image: 'public/avatars/laptop1.jpg' },
    { id: 2, name: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è', description: 'RGB –ø–æ–¥—Å–≤–µ—Ç–∫–∞, Cherry MX Red', price: 8500, image: 'public/avatars/keyboard1.jpg' },
    { id: 3, name: '–ú—ã—à—å –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è', description: 'Logitech MX Master 3', price: 7200, image: 'public/avatars/mouse1.jpg' },
    { id: 4, name: '–ú–æ–Ω–∏—Ç–æ—Ä 27"', description: '2K, 144Hz, IPS', price: 32000, image: 'public/avatars/monitor1.jpg' },
    { id: 5, name: '–ù–∞—É—à–Ω–∏–∫–∏', description: 'Sony WH-1000XM4, —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ', price: 22000, image: 'public/avatars/iphone1.jpg' },
    { id: 6, name: '–í–µ–±-–∫–∞–º–µ—Ä–∞', description: 'Logitech C920, Full HD', price: 5500, image: 'public/avatars/mouse1.jpg' },
];

function ShoppingCart() {
    const [cart, setCart] = useState([]);
    
    // –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    const addToCart = (product) => {
        const existingItem = cart.find(item => item.id === product.id);
        
        if (existingItem) {
            // –¢–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            setCart(cart.map(item =>
                item.id === product.id
                    ? { ...item, quantity: item.quantity + 1 }
                    : item
            ));
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
            setCart([...cart, { ...product, quantity: 1 }]);
        }
    };
    
    // –£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    const incrementQuantity = (productId) => {
        setCart(cart.map(item =>
            item.id === productId
                ? { ...item, quantity: item.quantity + 1 }
                : item
        ));
    };
    
    // –£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    const decrementQuantity = (productId) => {
        setCart(cart.map(item =>
            item.id === productId
                ? { ...item, quantity: Math.max(1, item.quantity - 1) }
                : item
        ));
    };
    
    // –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    const removeFromCart = (productId) => {
        setCart(cart.filter(item => item.id !== productId));
    };
    
    // –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
    const clearCart = () => {
        setCart([]);
    };
    
    // –í—ã—á–∏—Å–ª–µ–Ω–∏—è
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    const subtotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
    const shipping = cart.length > 0 ? 500 : 0;
    const total = subtotal + shipping;
    
    return (
        <div className="shop-container">
            <h1>üõí –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω</h1>
            
            <div className="shop-layout">
                {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
                <div className="products-section">
                    <h2>–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤</h2>
                    <div className="products-list">
                        {PRODUCTS.map(product => (
                            <div key={product.id} className="product-card" data-category="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞">
                                <img src={product.image} alt={product.name} className="product-image" />
                                <div className="product-info">
                                    <h3 className="product-name">{product.name}</h3>
                                    <p className="product-description">{product.description}</p>
                                    <div className="product-price">
                                        {product.price.toLocaleString()} ‚ÇΩ
                                    </div>
                                </div>
                                <button 
                                    onClick={() => addToCart(product)}
                                    className="add-to-cart-button"
                                >
                                    –í –∫–æ—Ä–∑–∏–Ω—É
                                </button>
                            </div>
                        ))}
                    </div>
                </div>
                
                {/* –ö–æ—Ä–∑–∏–Ω–∞ */}
                <div className="cart-section">
                    <h2>
                        –ö–æ—Ä–∑–∏–Ω–∞
                        {totalItems > 0 && (
                            <span className="cart-badge">{totalItems}</span>
                        )}
                    </h2>
                    
                    {cart.length === 0 ? (
                        <div className="cart-empty">
                            <div className="icon">üõí</div>
                            <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                        </div>
                    ) : (
                        <>
                            <div className="cart-items">
                                {cart.map(item => (
                                    <div key={item.id} className="cart-item">
                                        <img src={item.image} alt={item.name} className="cart-item-image" />
                                        <div className="cart-item-info">
                                            <h4 className="cart-item-name">{item.name}</h4>
                                            <div className="cart-item-price">
                                                {item.price.toLocaleString()} ‚ÇΩ
                                            </div>
                                            <div className="quantity-controls">
                                                <button 
                                                    onClick={() => decrementQuantity(item.id)}
                                                    className="quantity-button"
                                                >
                                                    -
                                                </button>
                                                <span className="quantity-value">{item.quantity}</span>
                                                <button 
                                                    onClick={() => incrementQuantity(item.id)}
                                                    className="quantity-button"
                                                >
                                                    +
                                                </button>
                                                <button 
                                                    onClick={() => removeFromCart(item.id)}
                                                    className="remove-button"
                                                >
                                                    –£–¥–∞–ª–∏—Ç—å
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                ))}
                            </div>
                            
                            <div className="cart-summary">
                                <div className="summary-row">
                                    <span>–¢–æ–≤–∞—Ä—ã ({totalItems}):</span>
                                    <span>{subtotal.toLocaleString()} ‚ÇΩ</span>
                                </div>
                                <div className="summary-row">
                                    <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                                    <span>{shipping.toLocaleString()} ‚ÇΩ</span>
                                </div>
                                <div className="summary-row total">
                                    <span>–ò—Ç–æ–≥–æ:</span>
                                    <span>{total.toLocaleString()} ‚ÇΩ</span>
                                </div>
                                
                                <button 
                                    className="checkout-button"
                                    onClick={() => {
                                        alert(`–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω –Ω–∞ —Å—É–º–º—É ${total.toLocaleString()} ‚ÇΩ`);
                                        clearCart();
                                    }}
                                >
                                    –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                                </button>
                            </div>
                        </>
                    )}
                </div>
            </div>
        </div>
    );
}

function App() {
    return (
        <div className="app-container">
            <ShoppingCart />
        </div>
    );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);

