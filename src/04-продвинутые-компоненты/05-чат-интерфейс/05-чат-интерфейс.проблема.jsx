import './style.css';

const { useState, useEffect, useRef } = React;

// –ù–∞—á–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
const INITIAL_MESSAGES = [
    { id: 1, text: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?', sender: 'bot', time: '10:00' },
    { id: 2, text: '–û—Ç–ª–∏—á–Ω–æ! –ê —É —Ç–µ–±—è?', sender: 'user', time: '10:01' },
];

function ChatInterface() {
    // –°–æ–∑–¥–∞–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
    // - messages (–º–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞—á–∞–ª—å–Ω–æ–µ: INITIAL_MESSAGES)
    // - inputValue (—Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞, –Ω–∞—á–∞–ª—å–Ω–æ–µ: '')
    // - isTyping (–ø–µ—á–∞—Ç–∞–µ—Ç –ª–∏ –±–æ—Ç, –Ω–∞—á–∞–ª—å–Ω–æ–µ: false)
    
    // –°–æ–∑–¥–∞–π—Ç–µ ref –¥–ª—è –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∞:
    const messagesEndRef = useRef(null);
    
    // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ messages
    useEffect(() => {
        // –í—ã–∑–æ–≤–∏—Ç–µ scrollToBottom()
    }, [/* –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ */]);
    
    const scrollToBottom = () => {
        // –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –∫ messagesEndRef
        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
    };
    
    const sendMessage = (e) => {
        e.preventDefault();
        
        // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ inputValue –Ω–µ –ø—É—Å—Ç–æ–π
        
        // –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
        const newMessage = {
            id: Date.now(),
            text: inputValue,
            sender: 'user',
            time: new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })
        };
        
        // –î–æ–±–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ messages
        // –û—á–∏—Å—Ç–∏—Ç–µ inputValue
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):
        // - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ isTyping –≤ true
        // - –ß–µ—Ä–µ–∑ setTimeout (1-2 —Å–µ–∫) –¥–æ–±–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        // - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ isTyping –≤ false
    };
    
    return (
        <div className="chat-container">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="chat-header">
                <div className="chat-avatar">ü§ñ</div>
                <div className="chat-info">
                    <h2>–ß–∞—Ç-–±–æ—Ç –ü–æ–º–æ—â–Ω–∏–∫</h2>
                    <p>–í—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏</p>
                </div>
            </div>
            
            {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
            <div className="chat-messages">
                {/* –û—Ç–æ–±—Ä–∞–∑–∏—Ç–µ –≤—Å–µ messages */}
                {/* –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:
                    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞—Å—Å "message sent" –¥–ª—è user
                    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞—Å—Å "message received" –¥–ª—è bot
                    - –ü–æ–∫–∞–∂–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä, —Ç–µ–∫—Å—Ç –∏ –≤—Ä–µ–º—è
                */}
                
                {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è (–µ—Å–ª–∏ isTyping === true) */}
                
                {/* –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª–∞ */}
                <div ref={messagesEndRef} />
            </div>
            
            {/* –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            <form onSubmit={sendMessage} className="chat-input-form">
                <input 
                    type="text"
                    value={''} // inputValue
                    onChange={() => {}} // setInputValue
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                    className="chat-input"
                />
                <button 
                    type="submit"
                    disabled={false} // –∑–∞–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ inputValue –ø—É—Å—Ç–æ–π
                    className="send-button"
                >
                    ‚û§
                </button>
            </form>
        </div>
    );
}

function App() {
    return (
        <div className="app-container">
            <ChatInterface />
        </div>
    );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);

