import './style.css';

const { useState } = React;

const PRODUCTS = [
    { id: 1, name: '–ù–æ—É—Ç–±—É–∫ ASUS', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', price: 45000, image: 'https://via.placeholder.com/300x200/3b82f6/ffffff?text=–ù–æ—É—Ç–±—É–∫' },
    { id: 2, name: 'iPhone 15', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', price: 80000, image: 'https://via.placeholder.com/300x200/3b82f6/ffffff?text=iPhone' },
    { id: 3, name: '–§—É—Ç–±–æ–ª–∫–∞ Nike', category: '–û–¥–µ–∂–¥–∞', price: 2500, image: 'https://via.placeholder.com/300x200/10b981/ffffff?text=–§—É—Ç–±–æ–ª–∫–∞' },
    { id: 4, name: '–ö—Ä–æ—Å—Å–æ–≤–∫–∏ Adidas', category: '–û–¥–µ–∂–¥–∞', price: 7000, image: 'https://via.placeholder.com/300x200/10b981/ffffff?text=–ö—Ä–æ—Å—Å–æ–≤–∫–∏' },
    { id: 5, name: '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ LG', category: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', price: 35000, image: 'https://via.placeholder.com/300x200/f59e0b/ffffff?text=–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫' },
    { id: 6, name: '–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ Samsung', category: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', price: 25000, image: 'https://via.placeholder.com/300x200/f59e0b/ffffff?text=–°—Ç–∏—Ä–∞–ª–∫–∞' },
    { id: 7, name: '–ù–∞—É—à–Ω–∏–∫–∏ Sony', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', price: 8000, image: 'https://via.placeholder.com/300x200/3b82f6/ffffff?text=–ù–∞—É—à–Ω–∏–∫–∏' },
    { id: 8, name: '–î–∂–∏–Ω—Å—ã Levi\'s', category: '–û–¥–µ–∂–¥–∞', price: 5500, image: 'https://via.placeholder.com/300x200/10b981/ffffff?text=–î–∂–∏–Ω—Å—ã' },
    { id: 9, name: '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞', category: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', price: 6000, image: 'https://via.placeholder.com/300x200/f59e0b/ffffff?text=–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞' },
];

function ProductsFilter() {
    const [category, setCategory] = useState('all');
    const [minPrice, setMinPrice] = useState('');
    const [maxPrice, setMaxPrice] = useState('');
    const [searchQuery, setSearchQuery] = useState('');
    
    const filteredProducts = PRODUCTS.filter(product => {
        const matchesCategory = category === 'all' || product.category === category;
        const matchesMinPrice = !minPrice || product.price >= Number(minPrice);
        const matchesMaxPrice = !maxPrice || product.price <= Number(maxPrice);
        const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase());
        
        return matchesCategory && matchesMinPrice && matchesMaxPrice && matchesSearch;
    });
    
    const resetFilters = () => {
        setCategory('all');
        setMinPrice('');
        setMaxPrice('');
        setSearchQuery('');
    };
    
    return (
        <div className="products-container">
            <h1>üõçÔ∏è –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω</h1>
            
            {/* –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
            <div className="filters-panel">
                <h3>–§–∏–ª—å—Ç—Ä—ã</h3>
                
                <div className="filters-row">
                    <div className="filter-group">
                        <label>–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é:</label>
                        <input 
                            type="text"
                            value={searchQuery}
                            onChange={(e) => setSearchQuery(e.target.value)}
                            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ..."
                        />
                    </div>
                    
                    <div className="filter-group">
                        <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
                        <select value={category} onChange={(e) => setCategory(e.target.value)}>
                            <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                            <option value="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞">–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞</option>
                            <option value="–û–¥–µ–∂–¥–∞">–û–¥–µ–∂–¥–∞</option>
                            <option value="–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞">–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞</option>
                        </select>
                    </div>
                    
                    <div className="filter-group">
                        <label>–¶–µ–Ω–∞ –æ—Ç:</label>
                        <input 
                            type="number"
                            value={minPrice}
                            onChange={(e) => setMinPrice(e.target.value)}
                            placeholder="0"
                        />
                    </div>
                    
                    <div className="filter-group">
                        <label>–¶–µ–Ω–∞ –¥–æ:</label>
                        <input 
                            type="number"
                            value={maxPrice}
                            onChange={(e) => setMaxPrice(e.target.value)}
                            placeholder="100000"
                        />
                    </div>
                    
                    <div className="filter-group">
                        <label>&nbsp;</label>
                        <button onClick={resetFilters} className="reset-button">
                            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                        </button>
                    </div>
                </div>
            </div>
            
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö */}
            <div className="products-info">
                <div>–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <strong>{filteredProducts.length}</strong></div>
                <div>–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: <strong>{PRODUCTS.length}</strong></div>
            </div>
            
            {/* –°–µ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
            <div className="products-grid">
                {filteredProducts.length === 0 ? (
                    <div className="empty-results">
                        <p>üîç</p>
                        <p>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                        <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</p>
                    </div>
                ) : (
                    filteredProducts.map(product => (
                        <div key={product.id} className="product-card">
                            <img src={product.image} alt={product.name} className="product-image" />
                            <div className="product-info">
                                <div className="product-category">{product.category}</div>
                                <h3 className="product-name">{product.name}</h3>
                                <div className="product-price">{product.price.toLocaleString()} ‚ÇΩ</div>
                            </div>
                        </div>
                    ))
                )}
            </div>
        </div>
    );
}

function App() {
    return (
        <div className="app-container">
            <ProductsFilter />
        </div>
    );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);
