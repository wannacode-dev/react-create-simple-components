import './style.css';

const { useState } = React;

// –ò–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
const POSTS = Array.from({ length: 100 }, (_, i) => ({
    id: i + 1,
    title: `–ü–æ—Å—Ç –Ω–æ–º–µ—Ä ${i + 1}: –ò–∑—É—á–∞–µ–º React`,
    body: `–≠—Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞ ${i + 1}. React - –æ—Ç–ª–∏—á–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞!`,
    date: new Date(2024, 0, 1 + i).toLocaleDateString('ru-RU')
}));

function Pagination() {
    // –°–æ–∑–¥–∞–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
    // - currentPage (—á–∏—Å–ª–æ, –Ω–∞—á–∞–ª—å–Ω–æ–µ: 1)
    // - postsPerPage (—á–∏—Å–ª–æ, –Ω–∞—á–∞–ª—å–Ω–æ–µ: 10)
    
    // –í—ã—á–∏—Å–ª–∏—Ç–µ:
    // - indexOfLastPost = currentPage * postsPerPage
    // - indexOfFirstPost = indexOfLastPost - postsPerPage
    // - currentPosts = POSTS.slice(indexOfFirstPost, indexOfLastPost)
    // - totalPages = Math.ceil(POSTS.length / postsPerPage)
    
    const goToPage = (page) => {
        // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ currentPage –≤ page
    };
    
    const goToNextPage = () => {
        // –£–≤–µ–ª–∏—á—å—Ç–µ currentPage –Ω–∞ 1 (–µ—Å–ª–∏ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    };
    
    const goToPrevPage = () => {
        // –£–º–µ–Ω—å—à–∏—Ç–µ currentPage –Ω–∞ 1 (–µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    };
    
    return (
        <div className="pagination-container">
            <h1>üìÑ –ü–æ—Å—Ç—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π</h1>
            
            {/* –û—Ç–æ–±—Ä–∞–∑–∏—Ç–µ currentPosts */}
            <div className="posts-list">
                {/* –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ map –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤ */}
            </div>
            
            {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
            <div className="pagination">
                <button 
                    onClick={goToPrevPage}
                    disabled={false} // –ó–∞–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ currentPage === 1
                    className="pagination-button"
                >
                    ‚Üê –ù–∞–∑–∞–¥
                </button>
                
                {/* –°–æ–∑–¥–∞–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü */}
                {/* –°–æ–≤–µ—Ç: –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Array.from({ length: totalPages }) */}
                
                <button 
                    onClick={goToNextPage}
                    disabled={false} // –ó–∞–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ currentPage === totalPages
                    className="pagination-button"
                >
                    –í–ø–µ—Ä—ë–¥ ‚Üí
                </button>
            </div>
            
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="pagination-info">
                –°—Ç—Ä–∞–Ω–∏—Ü–∞ <strong>?</strong> –∏–∑ <strong>?</strong>
            </div>
        </div>
    );
}

function App() {
    return (
        <div className="app-container">
            <Pagination />
        </div>
    );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);
