import './style.css';

const { useState } = React;

function ContactForm() {
    const [formData, setFormData] = useState({
        name: '',
        email: '',
        phone: '',
        subject: 'question',
        message: '',
        agree: false
    });
    
    const [errors, setErrors] = useState({});
    const [submitted, setSubmitted] = useState(false);
    
    const handleChange = (e) => {
        const { name, value, type, checked } = e.target;
        setFormData({
            ...formData,
            [name]: type === 'checkbox' ? checked : value
        });
        
        // –£–±–∏—Ä–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
        if (errors[name]) {
            setErrors({ ...errors, [name]: '' });
        }
    };
    
    const validate = () => {
        const newErrors = {};
        
        if (!formData.name.trim()) {
            newErrors.name = '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        }
        
        if (!formData.email.trim()) {
            newErrors.email = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
            newErrors.email = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email';
        }
        
        if (!formData.phone.trim()) {
            newErrors.phone = '–¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        }
        
        if (!formData.message.trim()) {
            newErrors.message = '–°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        } else if (formData.message.trim().length < 10) {
            newErrors.message = '–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤';
        }
        
        if (!formData.agree) {
            newErrors.agree = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö';
        }
        
        return newErrors;
    };
    
    const handleSubmit = (e) => {
        e.preventDefault();
        
        const newErrors = validate();
        
        if (Object.keys(newErrors).length === 0) {
            console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã:', formData);
            setSubmitted(true);
        } else {
            setErrors(newErrors);
        }
    };
    
    if (submitted) {
        return (
            <div className="contact-form">
                <div className="success-message">
                    <h3>‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!</h3>
                    <p>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
                    <p style={{ marginTop: '20px' }}>
                        <strong>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</strong><br />
                        –ò–º—è: {formData.name}<br />
                        Email: {formData.email}<br />
                        –¢–µ–º–∞: {formData.subject === 'question' ? '–í–æ–ø—Ä–æ—Å' : formData.subject === 'suggestion' ? '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ' : '–ñ–∞–ª–æ–±–∞'}
                    </p>
                </div>
            </div>
        );
    }
    
    return (
        <form className="contact-form" onSubmit={handleSubmit}>
            <h1>üìß –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</h1>
            <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</p>
            
            <div className="form-info">
                <p>üí° –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è</p>
            </div>
            
            <div className={`form-group ${errors.name ? 'error' : ''}`}>
                <label>
                    –ò–º—è <span className="required">*</span>
                </label>
                <input 
                    type="text"
                    name="name"
                    value={formData.name}
                    onChange={handleChange}
                    placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                />
                {errors.name && <div className="error-message">{errors.name}</div>}
            </div>
            
            <div className={`form-group ${errors.email ? 'error' : ''}`}>
                <label>
                    Email <span className="required">*</span>
                </label>
                <input 
                    type="email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                    placeholder="ivan@example.com"
                />
                {errors.email && <div className="error-message">{errors.email}</div>}
            </div>
            
            <div className={`form-group ${errors.phone ? 'error' : ''}`}>
                <label>
                    –¢–µ–ª–µ—Ñ–æ–Ω <span className="required">*</span>
                </label>
                <input 
                    type="tel"
                    name="phone"
                    value={formData.phone}
                    onChange={handleChange}
                    placeholder="+7 (999) 123-45-67"
                />
                {errors.phone && <div className="error-message">{errors.phone}</div>}
            </div>
            
            <div className="form-group">
                <label>–¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è</label>
                <select name="subject" value={formData.subject} onChange={handleChange}>
                    <option value="question">–í–æ–ø—Ä–æ—Å</option>
                    <option value="suggestion">–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</option>
                    <option value="complaint">–ñ–∞–ª–æ–±–∞</option>
                </select>
            </div>
            
            <div className={`form-group ${errors.message ? 'error' : ''}`}>
                <label>
                    –°–æ–æ–±—â–µ–Ω–∏–µ <span className="required">*</span>
                </label>
                <textarea 
                    name="message"
                    value={formData.message}
                    onChange={handleChange}
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ..."
                />
                {errors.message && <div className="error-message">{errors.message}</div>}
            </div>
            
            <div className="form-checkbox">
                <input 
                    type="checkbox"
                    id="agree"
                    name="agree"
                    checked={formData.agree}
                    onChange={handleChange}
                />
                <label htmlFor="agree">
                    –Ø —Å–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                </label>
            </div>
            {errors.agree && <div className="error-message">{errors.agree}</div>}
            
            <button type="submit" className="submit-button">
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            </button>
        </form>
    );
}

function App() {
    return (
        <div className="app-container">
            <ContactForm />
        </div>
    );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);
